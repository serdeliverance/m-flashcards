/*
 * This file is generated by jOOQ.
 */
package io.github.sd3v.mflashcardsbe.jooq.tables.records;


import io.github.sd3v.mflashcardsbe.jooq.tables.Noun;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NounRecord extends UpdatableRecordImpl<NounRecord> implements Record6<Long, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.noun.id</code>.
     */
    public NounRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.noun.name</code>.
     */
    public NounRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.noun.description</code>.
     */
    public NounRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.noun.article</code>.
     */
    public NounRecord setArticle(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.article</code>.
     */
    public String getArticle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.noun.fullname</code>.
     */
    public NounRecord setFullname(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.fullname</code>.
     */
    public String getFullname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.noun.tags</code>.
     */
    public NounRecord setTags(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.noun.tags</code>.
     */
    public String getTags() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Noun.NOUN.ID;
    }

    @Override
    public Field<String> field2() {
        return Noun.NOUN.NAME;
    }

    @Override
    public Field<String> field3() {
        return Noun.NOUN.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Noun.NOUN.ARTICLE;
    }

    @Override
    public Field<String> field5() {
        return Noun.NOUN.FULLNAME;
    }

    @Override
    public Field<String> field6() {
        return Noun.NOUN.TAGS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getArticle();
    }

    @Override
    public String component5() {
        return getFullname();
    }

    @Override
    public String component6() {
        return getTags();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getArticle();
    }

    @Override
    public String value5() {
        return getFullname();
    }

    @Override
    public String value6() {
        return getTags();
    }

    @Override
    public NounRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NounRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public NounRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public NounRecord value4(String value) {
        setArticle(value);
        return this;
    }

    @Override
    public NounRecord value5(String value) {
        setFullname(value);
        return this;
    }

    @Override
    public NounRecord value6(String value) {
        setTags(value);
        return this;
    }

    @Override
    public NounRecord values(Long value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NounRecord
     */
    public NounRecord() {
        super(Noun.NOUN);
    }

    /**
     * Create a detached, initialised NounRecord
     */
    public NounRecord(Long id, String name, String description, String article, String fullname, String tags) {
        super(Noun.NOUN);

        setId(id);
        setName(name);
        setDescription(description);
        setArticle(article);
        setFullname(fullname);
        setTags(tags);
    }

    /**
     * Create a detached, initialised NounRecord
     */
    public NounRecord(io.github.sd3v.mflashcardsbe.jooq.tables.pojos.Noun value) {
        super(Noun.NOUN);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setArticle(value.getArticle());
            setFullname(value.getFullname());
            setTags(value.getTags());
        }
    }
}
