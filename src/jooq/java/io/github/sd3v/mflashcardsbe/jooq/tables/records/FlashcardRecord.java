/*
 * This file is generated by jOOQ.
 */
package io.github.sd3v.mflashcardsbe.jooq.tables.records;


import io.github.sd3v.mflashcardsbe.jooq.tables.Flashcard;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlashcardRecord extends UpdatableRecordImpl<FlashcardRecord> implements Record5<Long, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.flashcard.id</code>.
     */
    public FlashcardRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.flashcard.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.flashcard.front</code>.
     */
    public FlashcardRecord setFront(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.flashcard.front</code>.
     */
    public String getFront() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.flashcard.back</code>.
     */
    public FlashcardRecord setBack(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.flashcard.back</code>.
     */
    public String getBack() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.flashcard.example</code>.
     */
    public FlashcardRecord setExample(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.flashcard.example</code>.
     */
    public String getExample() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.flashcard.deck_id</code>.
     */
    public FlashcardRecord setDeckId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.flashcard.deck_id</code>.
     */
    public Long getDeckId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Flashcard.FLASHCARD.ID;
    }

    @Override
    public Field<String> field2() {
        return Flashcard.FLASHCARD.FRONT;
    }

    @Override
    public Field<String> field3() {
        return Flashcard.FLASHCARD.BACK;
    }

    @Override
    public Field<String> field4() {
        return Flashcard.FLASHCARD.EXAMPLE;
    }

    @Override
    public Field<Long> field5() {
        return Flashcard.FLASHCARD.DECK_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFront();
    }

    @Override
    public String component3() {
        return getBack();
    }

    @Override
    public String component4() {
        return getExample();
    }

    @Override
    public Long component5() {
        return getDeckId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFront();
    }

    @Override
    public String value3() {
        return getBack();
    }

    @Override
    public String value4() {
        return getExample();
    }

    @Override
    public Long value5() {
        return getDeckId();
    }

    @Override
    public FlashcardRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FlashcardRecord value2(String value) {
        setFront(value);
        return this;
    }

    @Override
    public FlashcardRecord value3(String value) {
        setBack(value);
        return this;
    }

    @Override
    public FlashcardRecord value4(String value) {
        setExample(value);
        return this;
    }

    @Override
    public FlashcardRecord value5(Long value) {
        setDeckId(value);
        return this;
    }

    @Override
    public FlashcardRecord values(Long value1, String value2, String value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlashcardRecord
     */
    public FlashcardRecord() {
        super(Flashcard.FLASHCARD);
    }

    /**
     * Create a detached, initialised FlashcardRecord
     */
    public FlashcardRecord(Long id, String front, String back, String example, Long deckId) {
        super(Flashcard.FLASHCARD);

        setId(id);
        setFront(front);
        setBack(back);
        setExample(example);
        setDeckId(deckId);
    }

    /**
     * Create a detached, initialised FlashcardRecord
     */
    public FlashcardRecord(io.github.sd3v.mflashcardsbe.jooq.tables.pojos.Flashcard value) {
        super(Flashcard.FLASHCARD);

        if (value != null) {
            setId(value.getId());
            setFront(value.getFront());
            setBack(value.getBack());
            setExample(value.getExample());
            setDeckId(value.getDeckId());
        }
    }
}
